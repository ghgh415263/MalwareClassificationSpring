package ai.malwareClassification.domain;

import lombok.AccessLevel;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

@Table(name = "SOFTWARE")
@Entity
@Getter
@NoArgsConstructor(access = AccessLevel.PROTECTED)
public class Software extends BaseTimeEntity{

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)  //DB가 내부에서 처리해주는 값
    private Long id;

    @ManyToOne
    @JoinColumn(name = "uploader_id")
    private User uploader;

    @Column(length = 32, nullable = false)
    private String signature;

    @Column(length = 256, nullable = false)
    private String localstoreName;

    @Column(length = 256, nullable = false)
    private String filename;

    @Column(length = 256, nullable = true)
    private String nickname;

    @OneToMany(mappedBy = "software", cascade = CascadeType.ALL, orphanRemoval = true)
    @OrderBy("createdTime desc")
    private List<SoftwareReport> ReportList = new ArrayList<>();

    @Builder
    private Software(String signature, String localstoreName, String filename, User uploader, String nickname){
        this.signature = signature;
        this.localstoreName = localstoreName;
        this.filename = filename;
        this.uploader = uploader;
        this.nickname = nickname;
    }

    public void setReportList(List<SoftwareReport> reportList) {
        ReportList = reportList;
    }
}
