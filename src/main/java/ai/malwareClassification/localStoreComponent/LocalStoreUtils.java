package ai.malwareClassification.localStoreComponent;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;
import java.util.UUID;

@Component
public class LocalStoreUtils {

    @Value("${software.store.dir}")
    private String softwareStoreDir;

    @Value("${purpose.store.dir}")
    private String purposeStoreDir;

    @Value("${behavior.store.dir}")
    private String behaviorStoreDir;

    public String saveSoftwareInLocalMemory(MultipartFile file) throws IOException {
        return saveInLocalMemory(file, softwareStoreDir);
    }

    public String savePurposeInLocalMemory(MultipartFile file) throws IOException {
        return saveInLocalMemory(file, purposeStoreDir);
    }

    public String saveBehaviorInLocalMemory(MultipartFile file) throws IOException {
        return saveInLocalMemory(file, behaviorStoreDir);
    }


    private String saveInLocalMemory(MultipartFile multipartFile, String savePath) throws IOException {

        if (multipartFile.isEmpty()) {
            return null;
        }

        String originalFilename = multipartFile.getOriginalFilename();
        String storeFileName = createStoreFileName(originalFilename);
        multipartFile.transferTo(new File(savePath+storeFileName));
        return storeFileName;
    }

    private String createStoreFileName(String originalFilename){
        String ext = extractExt(originalFilename);
        String uuid = UUID.randomUUID().toString();
        return uuid + "." + ext;
    }

    private String extractExt(String originalFilename) {
        int pos = originalFilename.lastIndexOf(".");
        return originalFilename.substring(pos + 1);
    }
}
