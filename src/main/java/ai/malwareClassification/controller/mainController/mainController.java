package ai.malwareClassification.controller.mainController;

import ai.malwareClassification.pageableCustom.PageCustom;
import ai.malwareClassification.service.softwareDetails.SoftwarePageableService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.web.PageableDefault;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;

@RequiredArgsConstructor
@Slf4j
@Controller
@RequestMapping(value = "/main")
public class mainController {

    private final SoftwarePageableService softwarePageService;

    @GetMapping("")
    public String softWareList (@PageableDefault(size=5, sort="createdTime",direction = Sort.Direction.DESC) Pageable pageable, Model model) {

        Page<softwareForPagingDto> paging = softwarePageService.findSoftWareList(pageable)
                .map((software)-> softwareForPagingDto.fromEntity(software));

        PageCustom<softwareForPagingDto> dtoPaging= new PageCustom<softwareForPagingDto>(paging.getContent(), paging.getPageable(), paging.getTotalElements());
        model.addAttribute("paging", dtoPaging);
        model.addAttribute("searchDto", new SearchDto("", "", ""));
        return "main";
    }

    @GetMapping("/search")
    public String softwareListSearch(@ModelAttribute @Valid SearchDto searchDto, @PageableDefault(size=5, sort="createdTime",direction = Sort.Direction.DESC) Pageable pageable, Model model) {

        Page<softwareForPagingDto> paging = softwarePageService.findSoftWareListBySearch(searchDto, pageable)
                .map((software)-> softwareForPagingDto.fromEntity(software));

        PageCustom<softwareForPagingDto> dtoPaging= new PageCustom<softwareForPagingDto>(paging.getContent(), paging.getPageable(), paging.getTotalElements());
        model.addAttribute("paging", dtoPaging);
        model.addAttribute("searchDto", searchDto);
        return "main";
    }
}
