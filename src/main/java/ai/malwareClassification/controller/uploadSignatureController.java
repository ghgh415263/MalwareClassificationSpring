package ai.malwareClassification.controller;

import ai.malwareClassification.config.auth.PrincipalDetails;
import ai.malwareClassification.service.SoftwareSaveService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;


@RequiredArgsConstructor
@Slf4j
@Controller
public class uploadSignatureController {
    private final SoftwareSaveService softwareSaveService;

    @GetMapping("main/form")
    public String uploadfile () {
        return "form";
    }

    @PostMapping("/newfile")
    public String uploadfile (MultipartFile multipartFile, Authentication authentication, RedirectAttributes redirectAttributes) {

        log.info("URL : /newfile");

        PrincipalDetails userDetails = (PrincipalDetails) authentication.getPrincipal();
        if (multipartFile.isEmpty()){
            redirectAttributes.addFlashAttribute("uploadfile","fail");
            return "main/form";
        }
        Long savedSoftwareId = softwareSaveService.saveSoftwareAndFile(multipartFile, userDetails);

        redirectAttributes.addFlashAttribute("uploadfile","success");
        return "redirect:/software/"+savedSoftwareId;
    }
}
