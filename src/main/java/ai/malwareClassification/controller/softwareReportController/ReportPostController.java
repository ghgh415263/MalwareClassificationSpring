package ai.malwareClassification.controller.softwareReportController;

import ai.malwareClassification.config.auth.PrincipalDetails;
import ai.malwareClassification.domain.SoftwareReport;
import ai.malwareClassification.service.reportSaveAndDownload.SaveReportService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;

@RequiredArgsConstructor
@Slf4j
@Controller
@RequestMapping(value = "/software")
public class ReportPostController {

    private final SaveReportService saveReportService;

    @GetMapping("/{id}/report-post")
    public String reportPost(Model model) {
        model.addAttribute("reportPostDto", new ReportPostDto("", "", null));
        return "reportPostPage";
    }

    @PostMapping("/{softwareId}/report-post")
    public String reportPost(@PathVariable Long softwareId, @ModelAttribute @Valid ReportPostDto reportPostDto, BindingResult bindingResult, @AuthenticationPrincipal PrincipalDetails principalDetails) {

        MultipartFile multipartFile = reportPostDto.getMultipartFile();
        if (multipartFile.isEmpty()){
            bindingResult.rejectValue("multipartFile", null, "파일을 첨부하십시요");
        }

        if (bindingResult.hasErrors()){
            return "reportPostPage";
        }

        SoftwareReport softwareReport = saveReportService.saveSoftwareReport(softwareId, reportPostDto, principalDetails.getloginUser());


        return "redirect:/software/"+softwareReport.getSoftware().getId();
    }
}
