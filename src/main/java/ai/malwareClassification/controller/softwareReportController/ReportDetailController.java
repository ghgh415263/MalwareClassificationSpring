package ai.malwareClassification.controller.softwareReportController;

import ai.malwareClassification.domain.SoftwareReport;
import ai.malwareClassification.service.reportSaveAndDownload.FindReportService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

import java.util.LinkedHashMap;
import java.util.Map;

@RequiredArgsConstructor
@Slf4j
@Controller
@RequestMapping(value = "/software")
public class ReportDetailController {

    private final FindReportService findReportService;

    @ModelAttribute("purposes")
    public Map<String, String> purposes() {  //TODO 나중에 STATIC 영역으로 만들것

        Map<String, String> purposes = new LinkedHashMap<>();
        purposes.put("Downloader", "Downloader");
        purposes.put("Dropper", "Dropper");
        purposes.put("Launcher", "Launcher");
        purposes.put("Adware", "Adware");
        purposes.put("Spyware", "Spyware");
        purposes.put("Ransomware", "Ransomware");
        purposes.put("Backdoor", "Backdoor");
        purposes.put("Exploit", "Exploit");
        purposes.put("Bot", "Bot");
        purposes.put("Scareware", "Scareware");
        purposes.put("Etc", "Etc");

        return purposes;
    }

    @ModelAttribute("behaviors")
    public Map<String, String> behaviors() {
        Map<String, String> behaviors = new LinkedHashMap<>();
        behaviors.put("Virus", "Virus");
        behaviors.put("Worm", "Worm");
        behaviors.put("Trojan", "Trojan");
        behaviors.put("Pup", "Pup");
        behaviors.put("Etc", "Etc");
        return behaviors;
    }

    @GetMapping("/{softwareId}/report/{id}")
    public String reportDetails(@PathVariable Long id, Model model) {

        SoftwareReport report = findReportService.findReport(id);
        ReportDetailDto reportDetailDto = ReportDetailDto.from(report);
        model.addAttribute("reportDetailDto",reportDetailDto);

        return "reportDetails";
    }
}
