package ai.malwareClassification.controller.main;

import ai.malwareClassification.controller.main.reqParamDTO.MainBySearchDTO;
import ai.malwareClassification.controller.main.resParamDTO.softwareForPagingDTO;
import ai.malwareClassification.domain.Software;
import ai.malwareClassification.service.SoftwareService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import javax.validation.Valid;
import java.net.BindException;

@Slf4j
@Controller
@RequestMapping(value = "/main")
public class mainController {

    private final SoftwareService softwareService;

    public mainController(SoftwareService softwareService){
        this.softwareService = softwareService;
    }

    @GetMapping("")
    public String mainList(@RequestParam(defaultValue = "0") final int pageNum, Model model) {

        Page<Software> paging = softwareService.findSoftWareList(pageNum);
        Page<softwareForPagingDTO> DtoPaging = paging.map((software)-> softwareForPagingDTO.of(software));
        model.addAttribute("paging", DtoPaging);

        return "main";
    }

    @GetMapping("/search")
    public String mainListBySearch(@ModelAttribute @Valid final MainBySearchDTO mainBySearchDTO, Model model) {

        Page<Software> paging = softwareService.findSoftWareListBySearch(mainBySearchDTO);
        Page<softwareForPagingDTO> DtoPaging = paging.map((software)-> softwareForPagingDTO.of(software));
        model.addAttribute("paging", DtoPaging);
        model.addAttribute("searchCategory", mainBySearchDTO.getSearchCategory());
        model.addAttribute("searchText", mainBySearchDTO.getSearchText());

        return "main";
    }

    @ExceptionHandler(BindException.class)
    public String exceptionHandler(Exception e, RedirectAttributes redirectAttributes){
        redirectAttributes.addFlashAttribute("exception", e.getMessage());
        return "redirect:/main";
    }
}
