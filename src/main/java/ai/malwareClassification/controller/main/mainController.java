package ai.malwareClassification.controller.main;

import ai.malwareClassification.controller.main.reqParamDTO.MainBySearchDTO;
import ai.malwareClassification.controller.main.resParamDTO.softwareForPagingDTO;
import ai.malwareClassification.domain.Software;
import ai.malwareClassification.service.SoftwarePageableService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;

@RequiredArgsConstructor
@Slf4j
@Controller
@RequestMapping(value = "/main")
public class mainController {

    private final SoftwarePageableService softwarePageService;

    @GetMapping("")
    public String softWareList(@RequestParam(defaultValue = "0") final int pageNum, Model model) {

        Page<Software> paging = softwarePageService.findSoftWareList(pageNum);
        Page<softwareForPagingDTO> DtoPaging = paging.map((software)-> softwareForPagingDTO.fromEntity(software));
        model.addAttribute("paging", DtoPaging);

        return "main";
    }

    @GetMapping("/search")
    public String softWareListBySearch(@ModelAttribute @Valid final MainBySearchDTO mainBySearchDTO, Model model) {

        Page<Software> paging = softwarePageService.findSoftWareListBySearch(mainBySearchDTO.getPage(), mainBySearchDTO.getSearchCategory(), mainBySearchDTO.getSearchText());
        Page<softwareForPagingDTO> DtoPaging = paging.map((software)-> softwareForPagingDTO.fromEntity(software));
        model.addAttribute("paging", DtoPaging);
        model.addAttribute("searchCategory", mainBySearchDTO.getSearchCategory());
        model.addAttribute("searchText", mainBySearchDTO.getSearchText());

        return "main";
    }
}
