package ai.malwareClassification.controller.softwareDetailsController;

import ai.malwareClassification.config.auth.PrincipalDetails;
import ai.malwareClassification.controller.softwareDetailsController.resParamDto.SoftwareDetailsDto;
import ai.malwareClassification.domain.Software;
import ai.malwareClassification.domain.User;
import ai.malwareClassification.service.*;
import lombok.RequiredArgsConstructor;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import lombok.extern.slf4j.Slf4j;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

@RequiredArgsConstructor
@Slf4j
@Controller
@RequestMapping(value = "/software")
public class SoftwareDetailsController {

    private final SoftwareService softwareService;

    @GetMapping("/{id}")
    public String softwareDetailsById(@PathVariable Long id, Model model, @AuthenticationPrincipal PrincipalDetails principalDetails){

        User loginUser = principalDetails.getloginUser();
        Software software = softwareService.softwareByid(id);
        SoftwareDetailsDto softwareDetailsDto = new SoftwareDetailsDto(software);
        model.addAttribute("softwareDetailsDTO", softwareDetailsDto);
        model.addAttribute("loginUserId", loginUser.getId());
        return "softwareDetails";
    }

    @PatchMapping("/{id}")
    public String softwareNicknameModify(@PathVariable Long id, @RequestParam String newNickname){

        softwareService.updateNickname(id, newNickname);
        return "redirect:/software/{id}";
    }

    @DeleteMapping("/{id}")
    public String softwareRemove(@PathVariable Long id, @RequestParam Long uploader_id, @AuthenticationPrincipal PrincipalDetails principalDetails, RedirectAttributes redirectAttributes){

        if (principalDetails.getloginUser().getId() == uploader_id){
            softwareService.deleteSoftware(id);
            redirectAttributes.addFlashAttribute("softwareRemove","success");
            return "redirect:/main";
        }
        redirectAttributes.addFlashAttribute("softwareRemove","fail");
        return "redirect:/software/{id}";
    }
}