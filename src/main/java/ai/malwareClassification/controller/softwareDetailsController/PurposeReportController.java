package ai.malwareClassification.controller.softwareDetailsController;

import ai.malwareClassification.service.reportSaveAndDownload.PurposeDownloadService;
import ai.malwareClassification.service.reportSaveAndDownload.ReportFileDto;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.core.io.Resource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@RequiredArgsConstructor
@Slf4j
@Controller
@RequestMapping(value = "/software")
public class PurposeReportController {
    private final PurposeDownloadService purposeDownloadService;

    @GetMapping("/{id}/purpose/{purposeId}")
    public ResponseEntity<Resource> purposeReportDownload(@PathVariable Long purposeId){

        ReportFileDto downloadReportDto = purposeDownloadService.downloadPurposeReport(purposeId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Disposition", "attachment; filename=" + downloadReportDto.getFilename());  // 다운로드 되거나 로컬에 저장되는 용도로 쓰이는지를 알려주는 헤더
        return new ResponseEntity<>(downloadReportDto.getResource(), headers, HttpStatus.OK);
    }

}
