package ai.malwareClassification.controller;

import ai.malwareClassification.controller.reqParamDTO.PageNumOfMainDTO;
import ai.malwareClassification.controller.reqParamDTO.PageNumOfMainSearchDTO;
import ai.malwareClassification.domain.Software;
import ai.malwareClassification.service.MyService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import javax.validation.ConstraintViolationException;
import javax.validation.Valid;

@Slf4j
@Controller
@Validated
public class mainController {

    private MyService MyService;

    public mainController(MyService MyService){
        this.MyService = MyService;
    }

    @GetMapping("/main")
    public String MainPage(@ModelAttribute @Valid PageNumOfMainDTO pageNumOfMainDTO, Model model) {
        Page<Software> paging = MyService.getList(pageNumOfMainDTO);
        model.addAttribute("paging", paging);
        return "main";
    }

    @GetMapping("/main/search")
    public String search(@ModelAttribute @Valid PageNumOfMainSearchDTO PageNumOfMainSearchDTO, Model model) {

        Page<Software> paging = MyService.getListBySearch(PageNumOfMainSearchDTO);
        model.addAttribute("paging", paging);
        model.addAttribute("searchBy", PageNumOfMainSearchDTO.getSearchBy());
        model.addAttribute("searchText", PageNumOfMainSearchDTO.getSearchText());
        return "main";
    }

    @ExceptionHandler(ConstraintViolationException.class)
    public String exceptionHandler(Exception e, RedirectAttributes redirectAttributes){
        redirectAttributes.addFlashAttribute("exception", e.getMessage());
        return "redirect:/main";
    }
}
