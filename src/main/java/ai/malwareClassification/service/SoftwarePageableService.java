package ai.malwareClassification.service;

import ai.malwareClassification.controller.mainController.SearchDto;
import ai.malwareClassification.domain.Software;
import ai.malwareClassification.repository.SoftwareRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

@RequiredArgsConstructor
@Slf4j
@Service
public class SoftwarePageableService {

    private final SoftwareRepository softwareRepository;

    private final int pageSize = 10;

    @Transactional(readOnly = true)
    public Page<Software> findSoftWareList(Pageable pageable) {
        Page<Software> paging = softwareRepository.findAll(pageable);
        return paging;
    }

    @Transactional(readOnly = true)
    public Page<Software> findSoftWareListByUploader(int page, String keyword){
        Pageable pageable = PageRequest.of(page, pageSize);
        Page<Software> paging = softwareRepository.findAllByUploader(pageable, keyword);
        return paging;
    }

    @Transactional(readOnly = true)
    public Page<Software> findSoftWareListByNickname(int page, String keyword){
        Pageable pageable = PageRequest.of(page, pageSize);
        Page<Software> paging = softwareRepository.findAllByNickname(pageable, keyword);
        return paging;
    }

    @Transactional(readOnly = true)
    public Page<Software> findSoftWareListByFilename(int page, String keyword){
        Pageable pageable = PageRequest.of(page, pageSize);
        Page<Software> paging = softwareRepository.findAllByFilename(pageable, keyword);
        return paging;
    }

    @Transactional(readOnly = true)
    public List<Software> findSoftWareListBySearch(SearchDto searchDto){
        List<Software> paging = softwareRepository.findAll(searchDto);
        log.info(paging.toString());
        return paging;
    }
}
