package ai.malwareClassification.service;

import ai.malwareClassification.controller.main.reqParamDto.SearchDto;
import ai.malwareClassification.controller.main.resParamDto.softwareForPagingDto;
import ai.malwareClassification.domain.Software;
import ai.malwareClassification.repository.SoftwareRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@RequiredArgsConstructor
@Slf4j
@Service
public class SoftwarePageableService {

    private final SoftwareRepository softwareRepository;

    @Transactional(readOnly = true)
    public Page<softwareForPagingDto> findSoftWareList(int pageNum) {
        Pageable pageable = PageRequest.of(pageNum, 5);
        Page<Software> paging = softwareRepository.findAll(pageable);
        Page<softwareForPagingDto> DtoPaging = paging.map((software)-> softwareForPagingDto.fromEntity(software));
        return DtoPaging;
    }

    @Transactional(readOnly = true)
    public Page<softwareForPagingDto> findSoftWareListBySearch(SearchDto searchDto){
        Pageable pageable = PageRequest.of(searchDto.getPage(), 5);
        Page<Software> paging = softwareRepository.findAllBySearch(pageable, searchDto.getSearchCategory(), searchDto.getSearchText());
        Page<softwareForPagingDto> DtoPaging = paging.map((software)-> softwareForPagingDto.fromEntity(software));
        return DtoPaging;
    }

    //서비스에서 dto처리
}
