package ai.malwareClassification.service;

import ai.malwareClassification.config.auth.PrincipalDetails;
import ai.malwareClassification.controller.softwareDetails.reqParamDTO.BehaviorReportDto;
import ai.malwareClassification.controller.softwareDetails.resParamDTO.ReportFileDto;
import ai.malwareClassification.domain.SoftwareBehavior;
import ai.malwareClassification.exception.ResourceNotFoundException;
import ai.malwareClassification.localSecondaryMemory.LocalMemoryUtils;
import ai.malwareClassification.repository.BehaviorRepository;
import ai.malwareClassification.repository.PurposeRepository;
import ai.malwareClassification.repository.SoftwareRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.core.io.FileSystemResource;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.NoSuchElementException;

@RequiredArgsConstructor
@Slf4j
@Service
public class BehaviorSaveAndDownloadService {

    private final SoftwareRepository softwareRepository;
    private final BehaviorRepository behaviorRepository;

    @Transactional
    public void SaveBehavior(Long softwareId, BehaviorReportDto behaviorReportDto, PrincipalDetails userDetails){

        softwareRepository.findById(softwareId).orElseThrow(() -> new ResourceNotFoundException("해당 id를 가진 software는 존재하지 않음"));

        String path = LocalMemoryUtils.saveBehaviorInLocalMemory(behaviorReportDto.getFile());
        SoftwareBehavior softwareBehavior = SoftwareBehavior.builder()
                .file_name(behaviorReportDto.getFile().getOriginalFilename())
                .software_id(softwareId)
                .checker_name(userDetails.getUsername())
                .report_path(path)
                .behavior(behaviorReportDto.getBehavior()).build();

        behaviorRepository.save(softwareBehavior);
    }

    @Transactional(readOnly = true)
    public ReportFileDto downloadBehaviorReport(Long id){

        SoftwareBehavior softwareBehavior = behaviorRepository.behaviorFindById(id).orElseThrow(() -> new NoSuchElementException("해당 id를 가진 행위보고서는 존재하지 않음"));

        FileSystemResource resource = new FileSystemResource(softwareBehavior.getReport_path());

        ReportFileDto reportFileDto = new ReportFileDto(resource, softwareBehavior.getFile_name());
        return reportFileDto;
    }
}
