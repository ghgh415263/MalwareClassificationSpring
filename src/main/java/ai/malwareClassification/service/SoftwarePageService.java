package ai.malwareClassification.service;

import ai.malwareClassification.controller.main.reqParamDTO.MainBySearchDTO;
import ai.malwareClassification.domain.Software;
import ai.malwareClassification.repository.SoftwareRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@RequiredArgsConstructor
@Slf4j
@Service
public class SoftwarePageService {

    private final SoftwareRepository softwareRepository;

    @Transactional(readOnly = true)
    public Page<Software> findSoftWareList(int pageNum) {
        Pageable pageable = PageRequest.of(pageNum, 5);
        return softwareRepository.findAll(pageable);
    }

    @Transactional(readOnly = true)
    public Page<Software> findSoftWareListBySearch(int page, String searchCategory, String searchText){
        Pageable pageable = PageRequest.of(page, 5);
        return softwareRepository.findAllBySearch(pageable, searchCategory, searchText);
    }
}
