package ai.malwareClassification.service.reportSaveAndDownload;

import ai.malwareClassification.controller.softwareDetailsController.reqParamDto.PurposeReportDto;
import ai.malwareClassification.domain.Software;
import ai.malwareClassification.domain.SoftwarePurpose;
import ai.malwareClassification.domain.User;
import ai.malwareClassification.localStore.StoreManager;
import ai.malwareClassification.repository.PurposeRepository;
import ai.malwareClassification.repository.SoftwareRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.NoSuchElementException;

@RequiredArgsConstructor
@Slf4j
@Service
public class PurposeSaveService {

    private final SoftwareRepository softwareRepository;
    private final PurposeRepository purposeRepository;
    private final StoreManager purposeLocalStore;

    @Transactional
    public void SavePurpose(Long softwareId, PurposeReportDto purposeReportDto, User loginUser) {


        Software software = softwareRepository.findById(softwareId).orElseThrow(() -> new NoSuchElementException("해당 id를 가진 software는 존재하지 않음"));

        String storeFileName = purposeLocalStore.save(purposeReportDto.getFile());
        SoftwarePurpose softwarePurpose = SoftwarePurpose.builder()
                .file_name(purposeReportDto.getFile().getOriginalFilename())
                .software(software)
                .uploader(loginUser)
                .localstore_name(storeFileName)
                .purpose(purposeReportDto.getPurpose()).build();

        purposeRepository.save(softwarePurpose);
    }
}
