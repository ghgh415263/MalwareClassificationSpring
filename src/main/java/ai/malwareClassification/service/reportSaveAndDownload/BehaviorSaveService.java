package ai.malwareClassification.service.reportSaveAndDownload;

import ai.malwareClassification.config.auth.PrincipalDetails;
import ai.malwareClassification.controller.softwareDetails.reqParamDto.BehaviorReportDto;
import ai.malwareClassification.domain.SoftwareBehavior;
import ai.malwareClassification.exception.EntityNotFoundException;
import ai.malwareClassification.localStore.StoreManager;
import ai.malwareClassification.repository.BehaviorRepository;
import ai.malwareClassification.repository.SoftwareRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@RequiredArgsConstructor
@Slf4j
@Service
public class BehaviorSaveService {

    private final SoftwareRepository softwareRepository;
    private final BehaviorRepository behaviorRepository;
    private final StoreManager behaviorLocalStore;


    @Transactional
    public void SaveBehavior(Long softwareId, BehaviorReportDto behaviorReportDto, PrincipalDetails userDetails) {


        softwareRepository.findById(softwareId).orElseThrow(() -> new EntityNotFoundException("해당 id를 가진 software는 존재하지 않음"));

        String storeFileName = behaviorLocalStore.save(behaviorReportDto.getFile());
        SoftwareBehavior softwareBehavior = SoftwareBehavior.builder()
                .file_name(behaviorReportDto.getFile().getOriginalFilename())
                .software_id(softwareId)
                .checker_name(userDetails.getUsername())
                .localstore_name(storeFileName)
                .behavior(behaviorReportDto.getBehavior()).build();

        behaviorRepository.save(softwareBehavior);
    }
}
