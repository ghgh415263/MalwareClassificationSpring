package ai.malwareClassification.repository;

import ai.malwareClassification.domain.SoftwareBehavior;
import ai.malwareClassification.domain.SoftwarePurpose;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Repository;

import javax.persistence.EntityManager;
import java.util.List;
import java.util.Optional;

@Slf4j
@RequiredArgsConstructor
@Repository
public class JpaBehaviorRepository implements BehaviorRepository {

    private final EntityManager em;

    @Override
    public SoftwareBehavior save(SoftwareBehavior softwareBehavior) {
        em.persist(softwareBehavior);
        return softwareBehavior;
    }

    @Override
    public List<SoftwareBehavior> behaviorsFindBySoftwareId(Long software_id) {
        List<SoftwareBehavior> result = em.createQuery("select s from SoftwareBehavior s where s.software_id = :software_id", SoftwareBehavior.class).setParameter("software_id", software_id).getResultList();
        return result;
    }

    @Override
    public Optional<SoftwareBehavior> behaviorFindById(Long id) {
        SoftwareBehavior softwareBehavior = em.find(SoftwareBehavior.class, id);
        return Optional.ofNullable(softwareBehavior);
    }

    @Override
    public void deleteBehaviorById(Long id) {
        em.createQuery("delete from SoftwareBehavior s where s.id = :id").setParameter("id",id).executeUpdate();
    }
}
