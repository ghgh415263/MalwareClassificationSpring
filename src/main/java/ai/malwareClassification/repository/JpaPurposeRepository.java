package ai.malwareClassification.repository;

import ai.malwareClassification.domain.SoftwarePurpose;

import javax.persistence.EntityManager;
import java.util.List;
import java.util.Optional;

public class JpaPurposeRepository implements PurposeRepository{

    private final EntityManager em;

    public JpaPurposeRepository(EntityManager em) {
        this.em = em;
    }

    @Override
    public SoftwarePurpose save(SoftwarePurpose softwarePurpose){
        em.persist(softwarePurpose);
        return softwarePurpose;
    }
    @Override
    public List<SoftwarePurpose> purposesFindBySoftwareId(Long software_id){
        List<SoftwarePurpose> result = em.createQuery("select s from SoftwarePurpose s where s.software_id = :software_id", SoftwarePurpose.class).setParameter("software_id", software_id).getResultList();
        return result;
    }

    @Override
    public Optional<SoftwarePurpose> purposeFindById(Long id){
        List<SoftwarePurpose> result = em.createQuery("select s from SoftwarePurpose s where s.id = :id", SoftwarePurpose.class).setParameter("id", id).getResultList();
        return result.stream().findAny();
    }

    @Override
    public void deletePurposeById(Long id) {
        em.createQuery("delete from SoftwarePurpose s where s.id = :id").setParameter("id",id).executeUpdate();
    }
}
