package ai.malwareClassification.service;

import ai.malwareClassification.config.auth.PrincipalDetails;
import ai.malwareClassification.controller.dto.NewfileDTO;
import ai.malwareClassification.domain.User;
import ai.malwareClassification.repository.JpaSoftwareRepository;
import ai.malwareClassification.repository.JpaUserRepository;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.security.test.context.support.WithAnonymousUser;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.FileInputStream;

@SpringBootTest
@Transactional
public class MyServiceTest {

    @Autowired
    MyService myService;
    @Autowired
    JpaSoftwareRepository jpaSoftwareRepository;
    @Autowired
    JpaUserRepository jpaUserRepository;


    @Test
    void saveSignatureAndFile_세이브() throws Exception{
        //GIVEN
        User user = new User();
        user.setUsername("test");
        user.setPassword("$2a$10$JcZNY/v4UcOcrJrOPfBMZ.ov8Gyrdpi7Wlj/mQc29ZRIaon8QHZBm");
        user.setRole("ADMIN");
        user.setDepartment("ANALYSIS");
        jpaUserRepository.save(user);
        MultipartFile multipartFile = new MockMultipartFile("test_file.txt", new FileInputStream(new File("C:/Users/ghgh4/OneDrive/Desktop/test/test_file.txt")));
        String signature = myService.createSignature(multipartFile);
        PrincipalDetails userDetails = new PrincipalDetails(user);
        NewfileDTO newfileDTO = new NewfileDTO(multipartFile);

        //WHEN
        SaveSignatureAndFileDTO saveSignatureAndFileDTO = myService.saveSignatureAndFile(newfileDTO, userDetails);

        //THEN
        Assertions.assertEquals(false, saveSignatureAndFileDTO.isInDB());
        Assertions.assertEquals(signature, saveSignatureAndFileDTO.getSignature());
    }
}
